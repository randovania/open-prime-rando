name: Python Package

on:
  pull_request:
  merge_group:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Wheel

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.20"
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: build
        run: PYTHONWARNINGS=error uv build

      - name: Store the packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist

  test:
    runs-on: ubuntu-latest
    name: Test Python ${{ matrix.python.version }}
    strategy:
      fail-fast: false
      matrix:
        python:
          - {version: '3.10', wheel: 'cp310-cp310'}
          - {version: '3.11', wheel: 'cp311-cp311'}
          - {version: '3.12', wheel: 'cp312-cp312'}
          - {version: '3.13', wheel: 'cp313-cp313'}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.20"
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python.version }}

      - name: install
        run: uv sync --frozen --extra test

      - name: run pytest
        run: uv run pytest --skip-if-missing

  full_test:
    runs-on: self-hosted
    needs:
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: install
        run: uv sync --frozen --extra test

      - name: Run Tests
        run: uv run pytest --cov src --cov-report=xml --durations=100 -n 4

      - name: codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: false
          files: ./coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  pypi:
    runs-on: 'ubuntu-latest'
    needs:
      - build
      - test

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish ðŸ“¦ to TestPyPI
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.testpypi_password }}
          repository-url: https://test.pypi.org/legacy/
          attestations: false

      - name: Publish ðŸ“¦ to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.pypi_password }}
